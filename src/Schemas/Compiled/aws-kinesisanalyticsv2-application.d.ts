/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Resource Type definition for AWS::KinesisAnalyticsV2::Application
 */
export interface AwsKinesisanalyticsv2Application {
  ApplicationName?: string;
  RuntimeEnvironment: string;
  ApplicationMode?: string;
  Id?: string;
  ApplicationConfiguration?: ApplicationConfiguration;
  ApplicationDescription?: string;
  Tags?: Tag[];
  ServiceExecutionRole: string;
}
export interface ApplicationConfiguration {
  ApplicationCodeConfiguration?: ApplicationCodeConfiguration;
  EnvironmentProperties?: EnvironmentProperties;
  FlinkApplicationConfiguration?: FlinkApplicationConfiguration;
  SqlApplicationConfiguration?: SqlApplicationConfiguration;
  ZeppelinApplicationConfiguration?: ZeppelinApplicationConfiguration;
  ApplicationSnapshotConfiguration?: ApplicationSnapshotConfiguration;
}
export interface ApplicationCodeConfiguration {
  CodeContent: CodeContent;
  CodeContentType: string;
}
export interface CodeContent {
  ZipFileContent?: string;
  S3ContentLocation?: S3ContentLocation;
  TextContent?: string;
}
export interface S3ContentLocation {
  BucketARN?: string;
  FileKey?: string;
  ObjectVersion?: string;
}
export interface EnvironmentProperties {
  PropertyGroups?: PropertyGroup[];
}
export interface PropertyGroup {
  PropertyMap?: {
    [k: string]: unknown;
  };
  PropertyGroupId?: string;
}
export interface FlinkApplicationConfiguration {
  MonitoringConfiguration?: MonitoringConfiguration;
  CheckpointConfiguration?: CheckpointConfiguration;
  ParallelismConfiguration?: ParallelismConfiguration;
}
export interface MonitoringConfiguration {
  ConfigurationType: string;
  MetricsLevel?: string;
  LogLevel?: string;
}
export interface CheckpointConfiguration {
  ConfigurationType: string;
  CheckpointInterval?: number;
  CheckpointingEnabled?: boolean;
  MinPauseBetweenCheckpoints?: number;
}
export interface ParallelismConfiguration {
  ConfigurationType: string;
  ParallelismPerKPU?: number;
  Parallelism?: number;
  AutoScalingEnabled?: boolean;
}
export interface SqlApplicationConfiguration {
  Inputs?: Input[];
}
export interface Input {
  NamePrefix: string;
  InputSchema: InputSchema;
  KinesisStreamsInput?: KinesisStreamsInput;
  KinesisFirehoseInput?: KinesisFirehoseInput;
  InputProcessingConfiguration?: InputProcessingConfiguration;
  InputParallelism?: InputParallelism;
}
export interface InputSchema {
  RecordEncoding?: string;
  RecordColumns: RecordColumn[];
  RecordFormat: RecordFormat;
}
export interface RecordColumn {
  Mapping?: string;
  SqlType: string;
  Name: string;
}
export interface RecordFormat {
  RecordFormatType: string;
  MappingParameters?: MappingParameters;
}
export interface MappingParameters {
  CSVMappingParameters?: CSVMappingParameters;
  JSONMappingParameters?: JSONMappingParameters;
}
export interface CSVMappingParameters {
  RecordColumnDelimiter: string;
  RecordRowDelimiter: string;
}
export interface JSONMappingParameters {
  RecordRowPath: string;
}
export interface KinesisStreamsInput {
  ResourceARN: string;
}
export interface KinesisFirehoseInput {
  ResourceARN: string;
}
export interface InputProcessingConfiguration {
  InputLambdaProcessor?: InputLambdaProcessor;
}
export interface InputLambdaProcessor {
  ResourceARN: string;
}
export interface InputParallelism {
  Count?: number;
}
export interface ZeppelinApplicationConfiguration {
  CatalogConfiguration?: CatalogConfiguration;
  MonitoringConfiguration?: ZeppelinMonitoringConfiguration;
  DeployAsApplicationConfiguration?: DeployAsApplicationConfiguration;
  CustomArtifactsConfiguration?: CustomArtifactConfiguration[];
}
export interface CatalogConfiguration {
  GlueDataCatalogConfiguration?: GlueDataCatalogConfiguration;
}
export interface GlueDataCatalogConfiguration {
  DatabaseARN?: string;
}
export interface ZeppelinMonitoringConfiguration {
  LogLevel?: string;
}
export interface DeployAsApplicationConfiguration {
  S3ContentLocation: S3ContentBaseLocation;
}
export interface S3ContentBaseLocation {
  BucketARN: string;
  BasePath: string;
}
export interface CustomArtifactConfiguration {
  MavenReference?: MavenReference;
  S3ContentLocation?: S3ContentLocation;
  ArtifactType: string;
}
export interface MavenReference {
  ArtifactId: string;
  Version: string;
  GroupId: string;
}
export interface ApplicationSnapshotConfiguration {
  SnapshotsEnabled: boolean;
}
export interface Tag {
  Value: string;
  Key: string;
}
