/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Sample configuration mode for profile jobs.
 */
export type SampleMode = "FULL_DATASET" | "CUSTOM_ROWS";
/**
 * Sample configuration size for profile jobs.
 */
export type JobSize = number;
export type Statistic = string;
export type ValidationMode = "CHECK_ALL";

/**
 * Resource schema for AWS::DataBrew::Job.
 */
export interface AwsDatabrewJob {
  /**
   * Dataset name
   */
  DatasetName?: string;
  /**
   * Encryption Key Arn
   */
  EncryptionKeyArn?: string;
  /**
   * Encryption mode
   */
  EncryptionMode?: "SSE-KMS" | "SSE-S3";
  /**
   * Job name
   */
  Name: string;
  /**
   * Job type
   */
  Type: "PROFILE" | "RECIPE";
  /**
   * Log subscription
   */
  LogSubscription?: "ENABLE" | "DISABLE";
  /**
   * Max capacity
   */
  MaxCapacity?: number;
  /**
   * Max retries
   */
  MaxRetries?: number;
  Outputs?: Output[];
  DataCatalogOutputs?: DataCatalogOutput[];
  DatabaseOutputs?: DatabaseOutput[];
  /**
   * Output location
   */
  OutputLocation?: {
    Bucket: string;
    Key?: string;
    BucketOwner?: string;
  };
  /**
   * Project name
   */
  ProjectName?: string;
  Recipe?: Recipe;
  /**
   * Role arn
   */
  RoleArn: string;
  Tags?: Tag[];
  /**
   * Timeout
   */
  Timeout?: number;
  /**
   * Job Sample
   */
  JobSample?: {
    Mode?: SampleMode;
    Size?: JobSize;
  };
  /**
   * Profile Job configuration
   */
  ProfileConfiguration?: {
    DatasetStatisticsConfiguration?: StatisticsConfiguration;
    ProfileColumns?: [ColumnSelector, ...ColumnSelector[]];
    ColumnStatisticsConfigurations?: [ColumnStatisticsConfiguration, ...ColumnStatisticsConfiguration[]];
    EntityDetectorConfiguration?: EntityDetectorConfiguration;
  };
  /**
   * Data quality rules configuration
   */
  ValidationConfigurations?: [ValidationConfiguration, ...ValidationConfiguration[]];
}
export interface Output {
  CompressionFormat?: "GZIP" | "LZ4" | "SNAPPY" | "BZIP2" | "DEFLATE" | "LZO" | "BROTLI" | "ZSTD" | "ZLIB";
  Format?: "CSV" | "JSON" | "PARQUET" | "GLUEPARQUET" | "AVRO" | "ORC" | "XML" | "TABLEAUHYPER";
  FormatOptions?: OutputFormatOptions;
  PartitionColumns?: string[];
  Location: S3Location;
  Overwrite?: boolean;
}
/**
 * Format options for job Output
 */
export interface OutputFormatOptions {
  Csv?: CsvOutputOptions;
}
/**
 * Output Csv options
 */
export interface CsvOutputOptions {
  Delimiter?: string;
}
/**
 * S3 Output location
 */
export interface S3Location {
  Bucket: string;
  Key?: string;
  BucketOwner?: string;
}
export interface DataCatalogOutput {
  CatalogId?: string;
  DatabaseName: string;
  TableName: string;
  S3Options?: S3TableOutputOptions;
  DatabaseOptions?: DatabaseTableOutputOptions;
  Overwrite?: boolean;
}
export interface S3TableOutputOptions {
  Location: S3Location;
}
export interface DatabaseTableOutputOptions {
  TempDirectory?: S3Location;
  TableName: string;
}
export interface DatabaseOutput {
  /**
   * Glue connection name
   */
  GlueConnectionName: string;
  /**
   * Database table name
   */
  DatabaseOutputMode?: "NEW_TABLE";
  DatabaseOptions: DatabaseTableOutputOptions;
}
export interface Recipe {
  /**
   * Recipe name
   */
  Name: string;
  /**
   * Recipe version
   */
  Version?: string;
}
/**
 * A key-value pair to associate with a resource.
 */
export interface Tag {
  Key: string;
  Value: string;
}
export interface StatisticsConfiguration {
  IncludedStatistics?: [Statistic, ...Statistic[]];
  Overrides?: [StatisticOverride, ...StatisticOverride[]];
}
export interface StatisticOverride {
  Statistic: Statistic;
  Parameters: ParameterMap;
}
export interface ParameterMap {
  /**
   * This interface was referenced by `ParameterMap`'s JSON-Schema definition
   * via the `patternProperty` "^[A-Za-z0-9]{1,128}$".
   */
  [k: string]: string;
}
export interface ColumnSelector {
  Regex?: string;
  Name?: string;
}
export interface ColumnStatisticsConfiguration {
  Selectors?: [ColumnSelector, ...ColumnSelector[]];
  Statistics: StatisticsConfiguration;
}
export interface EntityDetectorConfiguration {
  EntityTypes: [string, ...string[]];
  AllowedStatistics?: AllowedStatistics;
}
export interface AllowedStatistics {
  Statistics: [Statistic, ...Statistic[]];
}
/**
 * Configuration to attach Rulesets to the job
 */
export interface ValidationConfiguration {
  /**
   * Arn of the Ruleset
   */
  RulesetArn: string;
  ValidationMode?: ValidationMode;
}
