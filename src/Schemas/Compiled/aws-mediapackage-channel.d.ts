/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Resource schema for AWS::MediaPackage::Channel
 */
export interface AwsMediapackageChannel {
  /**
   * The Amazon Resource Name (ARN) assigned to the Channel.
   */
  Arn?: string;
  /**
   * The ID of the Channel.
   */
  Id: string;
  /**
   * A short text description of the Channel.
   */
  Description?: string;
  /**
   * A short text description of the Channel.
   */
  HlsIngest?: {
    /**
     * A list of endpoints to which the source stream should be sent.
     */
    ingestEndpoints?: IngestEndpoint[];
  };
  /**
   * A collection of tags associated with a resource
   */
  Tags?: Tag[];
  /**
   * The configuration parameters for egress access logging.
   */
  EgressAccessLogs?: {
    /**
     * Sets a custom AWS CloudWatch log group name for access logs. If a log group name isn't specified, the defaults are used: /aws/MediaPackage/EgressAccessLogs for egress access logs and /aws/MediaPackage/IngressAccessLogs for ingress access logs.
     */
    LogGroupName?: string;
  };
  /**
   * The configuration parameters for egress access logging.
   */
  IngressAccessLogs?: {
    /**
     * Sets a custom AWS CloudWatch log group name for access logs. If a log group name isn't specified, the defaults are used: /aws/MediaPackage/EgressAccessLogs for egress access logs and /aws/MediaPackage/IngressAccessLogs for ingress access logs.
     */
    LogGroupName?: string;
  };
}
/**
 * An endpoint for ingesting source content for a Channel.
 */
export interface IngestEndpoint {
  /**
   * The system generated unique identifier for the IngestEndpoint
   */
  Id?: string;
  /**
   * The system generated username for ingest authentication.
   */
  Username?: string;
  /**
   * The system generated password for ingest authentication.
   */
  Password?: string;
  /**
   * The ingest URL to which the source stream should be sent.
   */
  Url?: string;
}
export interface Tag {
  Key: string;
  Value: string;
}
